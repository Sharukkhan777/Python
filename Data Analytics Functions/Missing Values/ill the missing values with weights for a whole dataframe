#---------------------------------------------
# Title
# Fill the missing values with weights for a whole dataframe
#---------------------------------------------
#Parameters:
#1) dataframe_name = Data Frame Name 
#2) no_of_data = number of data that we want to generate
#---------------------------------------------
#Return 
# dataframe of values generated
#---------------------------------------------
#Program
def Data_generate_with_weights_in_dataframe(dataframe_name,no_of_data):
	
	import random
	import pandas as pd
	# Empty dataframe
	df_dict = {}
	
	for i in dataframe_name.columns:
		# take the series of data
		series_of_values = dataframe_name[i].value_counts()
		# take the unique values
		list_of_index = list(series_of_values.index)
		# frequency of values
		list_of_values = list(series_of_values)
		
		# data generate code
		data_generated = random.choices(list_of_index,
						weights = list_of_values,
						k = no_of_data)
		# append to the dataframe
		df_dict.update({str(i):data_generated})
		
		# convert to dataframe
		data_generated_data = pd.DataFrame(df_dict)
	# return
	return data_generated_data

 #---------------------------------------------
 #eg:
 # missing_values = Data_generate_with_weights_in_dataframe(df,500)
